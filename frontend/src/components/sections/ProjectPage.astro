---
interface Technology {
  name: string;
  backgroundColor: string;
  textColor: string;
}

interface Project {
  id: number | string;
  title: string;
  description: string;
  backgroundUrl: string;
  technologies: Technology[];
}

import PageSection from "../PageSection.astro";
import ProjectPageHeader from "../ProjectPageHeader.astro";
const { projectId } = Astro.params;
import { loadTranslations } from "../../i18n";
import { getLocale } from "astro-i18n-aut";
import Container404 from "../Container404.astro";
import ProjectPageBody from "../ProjectPageBody.astro";
const locale = getLocale(Astro.url);
const translations = await loadTranslations(locale);
let projectHighlightText = translations.sections.projects.projectsNotes;
let viewGithub = translations.sections.projects.viewGithub;
let viewOnline = translations.sections.projects.viewOnline;
let projectInfo = translations.sections.projects.list.find((project: Project) => project.id == projectId);
---


<PageSection
  id="project-page"
  fixedHeight={!projectInfo}
  flexConfig={{
    enable: true,
    ...!projectInfo ? { justify: "center", align: "center" } : { justify: "flex-start", align: "flex-start" },
    direction: "column",
    gap: "16px",
  }}
  margin={projectInfo ? "76px 0" : "0"}
  mobileMargin="60px 0"
  maxWidth="1680px">
{projectInfo ?
<ProjectPageHeader projectInfo={{...projectInfo, viewGithub, viewOnline }}/>
<ProjectPageBody projectInfo={{ projectHighlightText, ...projectInfo }} /> :
<Container404 text={translations["404"].description} />}
</PageSection>
